{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/OrdersListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Row, Col, Image, InputGroup, FormControl } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { orderList, getOrderDetails } from \"../redux/actions/orderActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrdersListScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderListReducer = useSelector(state => state.orderListReducer);\n  const {\n    loading,\n    error,\n    orders: allOrders\n  } = orderListReducer;\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(orderList());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n  useEffect(() => {\n    setOrders(allOrders);\n  }, [allOrders]);\n\n  const getOrderDetails = id => {\n    dispatch(getOrderDetails(id));\n  };\n\n  const searchByUserNameHandler = name => {\n    if (name !== '') {\n      let filteredOrders = allOrders.filter(order => order.user !== null && order.user.name.toLowerCase().includes(name.toLowerCase()));\n      setOrders(filteredOrders);\n    } else {\n      setOrders(allOrders);\n    }\n  };\n\n  const searchOrderById = id => {\n    if (id !== '') {\n      let foundOrder = allOrders.filter(order => order._id.includes(id.toLowerCase()));\n\n      if (foundOrder.length > 0) {\n        setOrders(foundOrder);\n      }\n    } else {\n      setOrders(allOrders);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col-md-3 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"Find orders by username\",\n          onChange: e => searchByUserNameHandler(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"Find orders by id\",\n          onChange: e => searchOrderById(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DELIVERED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user !== null && order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: String(order.createdAt).substring(0, 16).replace(\"T\", \" \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/order/${order._id}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-sm\",\n                variant: \"success\",\n                onClick: () => {\n                  dispatch(getOrderDetails(order._id));\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrdersListScreen, \"Uf1rPounXb9RDAcSceAho+5u0P0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrdersListScreen;\nexport default OrdersListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersListScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/OrdersListScreen.js"],"names":["React","useEffect","useState","Table","Button","Row","Col","Image","InputGroup","FormControl","useDispatch","useSelector","Message","Loader","orderList","getOrderDetails","LinkContainer","OrdersListScreen","history","dispatch","userLogin","state","userInfo","orderListReducer","loading","error","orders","allOrders","setOrders","isAdmin","push","id","searchByUserNameHandler","name","filteredOrders","filter","order","user","toLowerCase","includes","searchOrderById","foundOrder","_id","length","e","target","value","map","String","createdAt","substring","replace","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect , useState } from \"react\";\nimport {\n  Table,\n  Button,\n  Row,\n  Col,\n  Image,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {orderList,getOrderDetails} from \"../redux/actions/orderActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst OrdersListScreen = ({ history }) => {\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  const orderListReducer = useSelector((state) => state.orderListReducer);\n\n  const { loading, error, orders:allOrders} = orderListReducer;\n\n  const [orders,setOrders] = useState([])\n\n\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(orderList());\n      \n    } else {\n      history.push(\"/login\");\n    }\n \n  }, [dispatch, history, userInfo]);\n\n  \n   useEffect(() => {\n    setOrders(allOrders)\n   },[allOrders])\n  \n  \n\n  const getOrderDetails = (id) => {\n    dispatch(getOrderDetails(id))\n  };\n\n  const searchByUserNameHandler = (name) => {\n      \n      if(name!==''){\n        let filteredOrders = allOrders.filter(order=>(\n          order.user !== null && order.user.name.toLowerCase().includes(name.toLowerCase())\n        ))\n       setOrders(filteredOrders)\n      }else{\n        setOrders(allOrders)\n      }\n \n  }\n\n  const searchOrderById = (id) =>{\n   \n  \n      if(id!==''){\n        let foundOrder = allOrders.filter(order=>order._id.includes(id.toLowerCase()))\n\n        if(foundOrder.length >0){\n          setOrders(foundOrder)\n        }\n      }else{\n        setOrders(allOrders)\n      }\n    \n    \n  \n  }\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col md={2}>\n          <h1>Orders</h1>\n        </Col>\n       \n       \n      </Row>\n      <Col className=\"col-md-3 mx-auto\">\n          <InputGroup>\n            <FormControl placeholder=\"Find orders by username\" onChange={e=>searchByUserNameHandler(e.target.value)}/>\n          </InputGroup>\n          <InputGroup className='mt-2'>\n            <FormControl placeholder=\"Find orders by id\" onChange={e=>searchOrderById(e.target.value)}/>\n          </InputGroup>\n        </Col>\n      {loading ? (\n        <Loader/>\n      ) : error ? (<Message variant=\"danger\" text={error} />) \n       :\n      (\n        <Table striped bordered hover responsive className='table-sm mt-3'>\n            <thead>\n              <tr>\n                <th>\n                  ID\n                </th>\n                <th>\n                  USER\n                </th>\n                <th>\n                  DATE\n                </th>\n                <th>\n                  TOTAL\n                </th>\n                <th>\n                  PAID\n                </th>\n                <th>\n                  DELIVERED\n                </th>\n                <th>\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n               orders && orders.map(order=>(\n              \n                <tr key={order._id}>\n                 \n                  <td>{order._id}</td>\n                  <td>{order.user!==null && order.user.name}</td>\n                  <td>{String(order.createdAt).substring(0,16).replace(\"T\",\" \")}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0,10) : (<i className='fas fa-times' style={{color:'red'}}></i> )}</td>\n                  <td>\n                     {order.isDelivered ? order.deliveredAt.substring(0,10) : (<i className='fas fa-times' style={{color:'red'}}></i> )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='success' onClick={()=>{ dispatch(getOrderDetails(order._id))}}>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))\n              }\n            </tbody>\n           </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrdersListScreen;\n"]},"metadata":{},"sourceType":"module"}