{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/components/EditSize.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSizeDetails } from '../redux/actions/sizeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditSize = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const dispatch = useDispatch();\n  const sizeDetails = useSelector(state => state.sizeDetailsReducer);\n  const {\n    size: sizeInfo,\n    loading,\n    error\n  } = sizeDetails;\n  console.log(sizeInfo);\n  const [size, setSize] = useState({\n    size: \"\"\n  });\n  useEffect(() => {\n    dispatch(getSizeDetails(id));\n    console.log(sizeInfo);\n  }, [sizeInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update API specifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"size\",\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"size e.g S/M/L..\",\n                value: size.size,\n                onChange: e => setSize({\n                  size: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditSize, \"kaJ3f4QPHrqd0ArkWRLJ2npmGGU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditSize;\nexport default EditSize;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSize\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/components/EditSize.js"],"names":["React","useState","useEffect","Button","Form","Modal","FormContainer","Message","Loader","useDispatch","useSelector","getSizeDetails","EditSize","id","dispatch","sizeDetails","state","sizeDetailsReducer","size","sizeInfo","loading","error","console","log","setSize","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,QAKO,iBALP;AAMA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,cAAR,QAA6B,8BAA7B;;;;AAEA,MAAMC,QAAQ,GAAG,QAAU;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAEzB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,WAAW,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,kBAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAqCN,WAA3C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,QAAM,CAACD,IAAD,EAAOM,OAAP,IAAkBvB,QAAQ,CAAC;AAC/BiB,IAAAA,IAAI,EAAE;AADyB,GAAD,CAAhC;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACbY,IAAAA,QAAQ,CAACH,cAAc,CAACE,EAAD,CAAf,CAAR;AAEOS,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAET,GALQ,EAKP,CAACA,QAAD,CALO,CAAT;AAOA,sBACE;AAAA,2BACE,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,aAAD;AAAA,iCACE,QAAC,IAAD;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,MAAtB;AAA6B,cAAA,SAAS,EAAC,MAAvC;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,WAAW,EAAC,kBAFd;AAGE,gBAAA,KAAK,EAAED,IAAI,CAACA,IAHd;AAIE,gBAAA,QAAQ,EAAGO,CAAD,IAAOD,OAAO,CAAC;AAAEN,kBAAAA,IAAI,EAAEO,CAAC,CAACC,MAAF,CAASC;AAAjB,iBAAD;AAJ1B;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAqBE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8BD,CAjDD;;GAAMf,Q;UAEaH,W,EACGC,W;;;KAHhBE,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport {\n\n  Button,\n  Form,\n  Modal,\n} from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getSizeDetails} from '../redux/actions/sizeActions';\n\nconst EditSize = ({id}) => {\n\n  const dispatch = useDispatch();\n  const sizeDetails = useSelector((state) => state.sizeDetailsReducer);\n  const { size: sizeInfo, loading, error } = sizeDetails;\n\n  console.log(sizeInfo);\n\n  const [size, setSize] = useState({\n    size: \"\",\n  });\n\n  useEffect(() => {\n     dispatch(getSizeDetails(id));\n       \n            console.log(sizeInfo)\n        \n  },[sizeInfo])\n\n  return (\n    <>\n      <Modal.Dialog>\n        <Modal.Header>\n          <Modal.Title>Update API specifications</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <FormContainer>\n            <Form>\n              <Form.Group controlId=\"size\" className=\"mt-3\">\n                <Form.Label>Size</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"size e.g S/M/L..\"\n                  value={size.size}\n                  onChange={(e) => setSize({ size: e.target.value })}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n          </FormContainer>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\">Go Back</Button>\n          <Button variant=\"primary\">Save changes</Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    </>\n  );\n};\n\nexport default EditSize;\n"]},"metadata":{},"sourceType":"module"}