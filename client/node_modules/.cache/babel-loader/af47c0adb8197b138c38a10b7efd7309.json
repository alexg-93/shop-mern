{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, ORDER_MYORDERS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from \"../types\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config); // console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logOut = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n    dispatch({\n      type: ORDER_MYORDERS_RESET\n    });\n    dispatch({\n      type: USER_LIST_RESET\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n\n    if (data) {\n      if (data.user) {\n        dispatch({\n          type: USER_DETAILS_SUCCESS,\n          payload: data.user\n        });\n      } else {\n        dispatch({\n          type: USER_DETAILS_SUCCESS,\n          payload: data\n        });\n      }\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUsersList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data.users\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const adminUpdateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/redux/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ORDER_MYORDERS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logOut","removeItem","err","console","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","user","updateUserProfile","put","getUsersList","users","deleteUser","delete","adminUpdateUser","_id"],"mappings":"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","sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  \n  ORDER_MYORDERS_RESET,\n\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../types\";\nimport axios from \"axios\";\n\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n    // console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logOut = () => async (dispatch) => {\n  try {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({\n      type: USER_LOGOUT,\n \n    });\n    dispatch({\n      type: USER_DETAILS_RESET,\n    \n    });\n    dispatch({\n      type: ORDER_MYORDERS_RESET,\n      \n    });\n    dispatch({\n      type:USER_LIST_RESET\n    })\n    \n\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const register = (name,email,password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n  \n      const { data } = await axios.post(\n        \"/api/users\",\n        { name,email, password },\n        config\n      );\n    \n      \n        dispatch({\n          type: USER_REGISTER_SUCCESS,\n          payload: data,\n        });\n\n        dispatch({\n          type:USER_LOGIN_SUCCESS,\n          payload:data\n        })\n      \n     \n  } catch (error) {\n    dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\nexport const getUserDetails = (id) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n  \n      const { data } = await axios.get(\n        `/api/users/${id}`,\n        config\n      );\n     \n      if(data){\n        if(data.user){\n          dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user,\n          });\n        }else{\n          dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n          });\n        }\n      }\n      \n      \n\n       \n  } catch (error) {\n    dispatch({\n        type: USER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n  \n      const { data } = await axios.put(\n        `/api/users/profile`,user,\n        config\n      );\n    \n      \n        dispatch({\n          type: USER_UPDATE_PROFILE_SUCCESS,\n          payload: data,\n        });\n\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n       \n  } catch (error) {\n    dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\nexport const getUsersList = () => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n  \n      const { data } = await axios.get(`/api/users`,\n        config\n      );\n    \n      \n        dispatch({\n          type: USER_LIST_SUCCESS,\n          payload: data.users,\n        });\n\n       \n  } catch (error) {\n    dispatch({\n        type: USER_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n  \n      await axios.delete(`/api/users/${id}`,config);\n    \n        dispatch({\n          type: USER_DELETE_SUCCESS,\n        });\n\n       \n  } catch (error) {\n    dispatch({\n        type: USER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\n\nexport const adminUpdateUser = (user) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n  \n    const {data} = await axios.put(`/api/users/${user._id}`,user,config);\n    \n      \n        dispatch({\n          type: USER_UPDATE_SUCCESS,\n        });\n        dispatch({\n          type: USER_DETAILS_SUCCESS,payload:data\n        });\n\n     \n\n       \n  } catch (error) {\n    dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}