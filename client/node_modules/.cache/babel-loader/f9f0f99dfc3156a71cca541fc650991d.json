{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails, editProduct } from \"../redux/actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../redux/types\";\nimport FormContainer from \"../components/FormContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const productID = match.params.id;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const updateProduct = useSelector(state => state.productUpdateReducer);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = updateProduct;\n  useEffect(() => {\n    //checks if update product success\n    if (successUpdate) {\n      setMessage(\"Product updated successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: PRODUCT_UPDATE_RESET\n        });\n        history.push('/admin/products');\n      }, 1500);\n    } else {\n      if (!product || product._id !== productID) {\n        dispatch(listProductDetails(productID));\n      }\n\n      setTitle(product.title);\n      setPrice(product.price);\n      setQuantity(product.quantity);\n      setImage(product.image);\n      setBrand(product.brand);\n      setDescription(product.description);\n      setCategory(product.category);\n    }\n  }, [dispatch, productID, history, successUpdate, error, errorUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(editProduct({\n      _id: productID,\n      title,\n      price,\n      quantity,\n      description,\n      brand,\n      size,\n      color,\n      category,\n      image\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/products\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: successUpdate ? 'success' : 'danger',\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: errorUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"quantity\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product Quantity\",\n            value: quantity,\n            onChange: e => setQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          className: \"mt-3\",\n          custom: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => {\n              setBrand(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"select brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), brands.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.brandName,\n                children: item.brandName\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"color\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => {\n              setColor(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"select color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), colors.map(col => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: col.colorName,\n                children: col.colorName\n              }, col._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sizes\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setSize(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"select size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), sizes.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s.size,\n              children: s.size\n            }, s.size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setCategory(prevState => ({ ...prevState,\n              categoryName: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type of clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.categoryName,\n              children: cat.categoryName\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setCategory(prevState => ({ ...prevState,\n              department: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select department of clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.department,\n              children: cat.department\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"description\",\n            label: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              as: \"textarea\",\n              value: description,\n              style: {\n                height: \"100px\"\n              },\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"img\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Product Image URL\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"Vka3RJcRQwFDmnRyzpCB9GCpdnI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","FloatingLabel","useDispatch","useSelector","Message","Loader","listProductDetails","editProduct","PRODUCT_UPDATE_RESET","FormContainer","ProductEditScreen","match","history","productID","params","id","title","setTitle","price","setPrice","quantity","setQuantity","image","setImage","description","setDescription","brand","setBrand","category","setCategory","size","setSize","color","setColor","message","setMessage","dispatch","productDetails","state","loading","error","product","updateProduct","productUpdateReducer","loadingUpdate","errorUpdate","success","successUpdate","setTimeout","type","push","_id","submitHandler","e","preventDefault","target","value","brands","map","item","brandName","colors","col","colorName","sizes","s","prevState","categoryName","categories","cat","department","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button,FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {listProductDetails,editProduct} from \"../redux/actions/productActions\";\nimport {PRODUCT_UPDATE_RESET} from \"../redux/types\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst ProductEditScreen = ({ match, history }) => {\n\n  const productID = match.params.id\n\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity,setQuantity] = useState(0)\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category,setCategory] = useState (\"\")\n  const [size,setSize] = useState(\"\")\n  const [color,setColor] = useState(\"\")\n  const [message,setMessage] = useState(\"\")\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails);\n\n  const { loading, error , product } = productDetails;\n\n\n  const updateProduct = useSelector((state) => state.productUpdateReducer);\n\n  const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = updateProduct;\n\n  \n    useEffect(() =>{\n\n      //checks if update product success\n      if(successUpdate){\n    \n        setMessage(\"Product updated successfully\")\n        setTimeout(()=>{\n          dispatch({type:PRODUCT_UPDATE_RESET})\n          history.push('/admin/products')\n        },1500)\n    \n        \n    }else{\n      if(!product || product._id!==productID){\n        dispatch(listProductDetails(productID))\n      }\n      setTitle(product.title)\n      setPrice(product.price)\n      setQuantity(product.quantity)\n      setImage(product.image)\n      setBrand(product.brand)\n      setDescription(product.description)\n      setCategory(product.category)\n    }\n    \n    },[dispatch,productID,history,successUpdate,error,errorUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(editProduct({_id:productID,title,price,quantity,description,brand,size,color,category,image}))\n    \n};\n\n  return (\n    <>\n    <Link to='/admin/products' className='btn btn-light my-3'>\n      Go Back\n    </Link>\n\n    {}\n  \n \n      <h1>Edit Product</h1>\n      {loadingUpdate && <Loader/>}\n      {loading && <Loader/>}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n      {message && <Message variant={successUpdate ? 'success' : 'danger'} text={message}></Message>}\n      {errorUpdate && <Message variant=\"danger\" text={errorUpdate}></Message>}\n  \n      <FormContainer>\n      <Form onSubmit={submitHandler} noValidate>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"price\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              required\n              type=\"number\"\n              placeholder=\"Product price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"quantity\" className=\"mt-3\">\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              required\n              type=\"number\"\n              placeholder=\"Product Quantity\"\n              value={quantity}\n              onChange={(e) => setQuantity(e.target.value)}\n            ></Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"brand\" className=\"mt-3\" custom>\n            <Form.Label>Select brand</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(e) => {\n                setBrand(e.target.value);\n              }}\n          \n            >\n              <option value=\"\">select brand</option>\n              {brands.map((item) => (\n                <>\n                  <option key={item._id} value={item.brandName}>\n                    {item.brandName}\n                  </option>\n                </>\n              ))}\n            \n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"color\" className=\"mt-3\">\n            <Form.Label>Select color</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(e) => {\n                setColor(e.target.value);\n              }}\n            >\n              <option value=\"\">select color</option>\n              {colors.map((col) => (\n                <>\n                  <option key={col._id} value={col.colorName}>\n                    {col.colorName}\n                  </option>\n                </>\n              ))}\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"sizes\" className=\"mt-3\">\n            <Form.Label>Select sizes</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(e) => setSize(e.target.value)}\n              \n            >\n              <option value=\"\">select size</option>\n              {sizes.map((s) => (\n                <option key={s.size} value={s.size}>\n                  {s.size}\n                </option>\n              ))}\n            </Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"category\" className=\"mt-3\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(e) =>\n                setCategory((prevState) => ({\n                  ...prevState,\n                  categoryName: e.target.value,\n                }))\n              }\n            >\n              <option value=\"\">Select type of clothes</option>\n              {categories.map((cat) => (\n                <option key={cat._id} value={cat.categoryName}>\n                  {cat.categoryName}\n                </option>\n              ))}\n            </Form.Control>\n\n            <Form.Control\n              required\n              as=\"select\"\n              onChange={(e) =>\n                setCategory((prevState) => ({\n                  ...prevState,\n                  department: e.target.value,\n                }))\n              }\n            >\n              <option value=\"\">Select department of clothes</option>\n              {categories.map((cat) => (\n                <option key={cat._id} value={cat.department}>\n                  {cat.department}\n                </option>\n              ))}\n            </Form.Control>\n\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"description\" className=\"mt-3\">\n            <Form.Label>Description</Form.Label>\n            <FloatingLabel controlId=\"description\" label=\"description\">\n              <Form.Control\n                required\n                as=\"textarea\"\n                value={description}\n                style={{ height: \"100px\" }}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n               <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </FloatingLabel>\n           \n          </Form.Group>\n\n          <Form.Group controlId=\"img\" className=\"mt-3\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Product Image URL\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            ></Form.Control>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            {/* <Form.Control\n              className=\"mt-3\"\n              controlid=\"image-file\"\n              label=\"Choose File\"\n              type=\"file\"\n              custom=\"true\"\n              onChange={() => null}\n            ></Form.Control>\n            {uploading && <Loader />} */}\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n            Create\n          </Button>\n        </Form>\n    </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}