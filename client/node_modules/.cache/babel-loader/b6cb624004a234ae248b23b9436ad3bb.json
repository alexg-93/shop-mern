{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../redux/actions/userActions\";\nimport { getMyOrdersDetails, getOrderDetails } from '../redux/actions/orderActions';\nimport FormContainer from \"../components/FormContainer\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { USER_UPDATE_PROFILE_RESET, USER_DETAILS_RESET } from '../redux/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const myOrders = useSelector(state => state.myOrders);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = myOrders;\n  useEffect(() => {\n    dispatch(getMyOrdersDetails());\n\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n\n      if (success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(getMyOrdersDetails());\n      }\n    }\n  }, [dispatch, history, user, userInfo, success]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //Dispatch update user details\n\n    dispatch(updateUserProfile({\n      id: userInfo._id,\n      name,\n      email,\n      password\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        text: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        text: \"Update success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"New name..\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"New email..\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"New Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        text: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: String(order.createdAt).substring(0, 16).replace(\"T\", \" \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 80\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  variant: \"success\",\n                  onClick: () => {\n                    dispatch(getOrderDetails(order._id));\n                  },\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProfileScreen, \"8hbUejpGemxvv9i17mqrOyfC1mA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","Table","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","getMyOrdersDetails","getOrderDetails","FormContainer","LinkContainer","USER_UPDATE_PROFILE_RESET","USER_DETAILS_RESET","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","myOrders","loadingOrders","errorOrders","orders","push","type","submitHandler","e","preventDefault","id","_id","target","value","map","order","String","createdAt","substring","replace","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col,Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getUserDetails,\n  updateUserProfile,\n} from \"../redux/actions/userActions\";\n\nimport {getMyOrdersDetails,getOrderDetails} from '../redux/actions/orderActions'\nimport FormContainer from \"../components/FormContainer\";\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {USER_UPDATE_PROFILE_RESET,USER_DETAILS_RESET } from '../redux/types'\n\nconst ProfileScreen = ({ history}) => {\n\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const myOrders = useSelector((state) => state.myOrders);\n  const {loading:loadingOrders,error:errorOrders, orders } = myOrders;\n\n  \n \n\n  useEffect(() => {\n   \n    dispatch(getMyOrdersDetails())\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      setName(userInfo.name)\n      setEmail(userInfo.email)\n      \n      if (success) {\n     \n         dispatch({type:USER_UPDATE_PROFILE_RESET})\n        dispatch(getUserDetails(\"profile\"))\n        dispatch(getMyOrdersDetails())\n  \n        \n      } \n    }\n  \n \n  }, [dispatch, history,user, userInfo,success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    //Dispatch update user details\n    dispatch(updateUserProfile({ id: userInfo._id, name, email, password }));\n    \n  };\n\n  \n\n  \n\n  return (\n  <Row>\n   <Col md={3}>\n \n      <h1>User Profile</h1>\n\n      {error && <Message variant=\"danger\" text={error}></Message>}\n      {success && <Message variant=\"success\" text=\"Update success\"></Message>}\n\n      {loading && <Loader />}\n     \n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"New name..\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"New email..\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\" className=\"mt-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"New Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Update Profile\n        </Button>\n      </Form>\n     \n   </Col>\n\n    <Col md={9}>\n        <h1>My Orders</h1>\n         {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger' text={errorOrders}/> : (\n           <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>\n                  ID\n                </th>\n                <th>\n                  DATE\n                </th>\n                <th>\n                  TOTAL\n                </th>\n                <th>\n                  PAID\n                </th>\n                <th>\n                  DELIVERED\n                </th>\n                <th>\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                orders.map(order=>(\n              \n                <tr key={order._id}>\n                 \n                  <td>{order._id}</td>\n                  <td>{String(order.createdAt).substring(0,16).replace(\"T\",\" \")}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0,10) : (<i className='fas fa-times' style={{color:'red'}}></i> )}</td>\n                  <td>\n                     {order.isDelivered ? order.deliveredAt.substring(0,10) : (<i className='fas fa-times' style={{color:'red'}}></i> )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='success' onClick={()=>{ dispatch(getOrderDetails(order._id))}}>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))\n              }\n            </tbody>\n           </Table>\n         )}\n    </Col>\n\n  </Row>\n \n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}