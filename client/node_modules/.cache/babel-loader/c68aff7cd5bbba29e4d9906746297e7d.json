{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/components/AccordionFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Rating from \"../components/Rating\";\nimport { Row, Accordion, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccordionFilter = () => {\n  _s();\n\n  const [priceRangeValue, setPriceRangeValue] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      flush: true,\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [\"Apple\", \"Sony\", \"Cannon\", \"Logitech\", \"Amazon\"].map((item, idx) => /*#__PURE__*/_jsxDEV(Form.Check, {\n              label: item,\n              \"aria-label\": `option` + idx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [1, 2, 3, 4, 5].map(option => /*#__PURE__*/_jsxDEV(Rating, {\n              value: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Price Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                fontSize: 15\n              },\n              children: [\"Price : 0 to $\", priceRangeValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Range, {\n              min: 0,\n              max: 3000,\n              value: priceRangeValue,\n              onChange: e => setPriceRangeValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: ['Computers', 'Tablets', 'Cellphones'].map((item, idx) => /*#__PURE__*/_jsxDEV(Form.Check, {\n            label: item,\n            \"aria-label\": `option` + idx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccordionFilter, \"MImYC9z/IliOBV82ksVfvz0MakU=\");\n\n_c = AccordionFilter;\nexport default AccordionFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionFilter\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/components/AccordionFilter.js"],"names":["React","useState","Rating","Row","Accordion","Form","AccordionFilter","priceRangeValue","setPriceRangeValue","map","item","idx","option","fontSize","e","target","value"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\nimport Rating from \"../components/Rating\";\nimport {\n    Row,\n    Accordion,\n    Form,\n  } from \"react-bootstrap\";\n\nconst AccordionFilter = () => {\n\n  \n    const [priceRangeValue, setPriceRangeValue] = useState(0);\n\n    return (\n        <>\n <Accordion flush>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Brand</Accordion.Header>\n                    <Accordion.Body>\n                      <Row>\n                        {[\"Apple\", \"Sony\", \"Cannon\", \"Logitech\", \"Amazon\"].map(\n                          (item, idx) => (\n                            <Form.Check\n                              label={item}\n                              aria-label={`option` + idx}\n                            />\n                          )\n                        )}\n                      </Row>\n                    </Accordion.Body>\n                  </Accordion.Item>\n\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Rating</Accordion.Header>\n                    <Accordion.Body>\n                      <Row>\n                        {[1, 2, 3, 4, 5].map((option) => (\n                          <Rating value={option} />\n                        ))}\n                      </Row>\n                    </Accordion.Body>\n                  </Accordion.Item>\n\n                  <Accordion.Item eventKey=\"2\">\n                    <Accordion.Header>Price Range</Accordion.Header>\n                    <Accordion.Body>\n                      <Row>\n                        <Form.Label style={{ fontSize: 15 }}>\n                          Price : 0 to ${priceRangeValue}\n                        </Form.Label>\n\n                        <Form.Range\n                          min={0}\n                          max={3000}\n                          value={priceRangeValue}\n                          onChange={(e) => setPriceRangeValue(e.target.value)}\n                        />\n                      </Row>\n                    </Accordion.Body>\n                  </Accordion.Item>\n\n                  <Accordion.Item eventKey=\"3\">\n                    <Accordion.Header>Categories</Accordion.Header>\n                    <Accordion.Body>\n                   \n                     {['Computers','Tablets','Cellphones'].map(\n                          (item, idx) => (\n                            <Form.Check\n                              label={item}\n                              aria-label={`option` + idx}\n                            />\n                          )\n                        )}\n                       \n                    \n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n        </>\n    )\n}\n\nexport default AccordionFilter\n"]},"metadata":{},"sourceType":"module"}