{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_MYORDERS_REQUEST, ORDER_MYORDERS_SUCCESS, ORDER_MYORDERS_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from \"../types\";\nimport axios from \"axios\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = order_id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${order_id}`, config);\n    const {\n      order\n    } = data;\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    const {\n      order\n    } = data;\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMyOrdersDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_MYORDERS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config); // const {order} = data;\n\n    dispatch({\n      type: ORDER_MYORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_MYORDERS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const orderList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/orders\", config);\n\n    if (data) {\n      dispatch({\n        type: ORDER_LIST_SUCCESS,\n        payload: data.orders\n      });\n    } else {\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload: `Error : ${data.message} statusCode ${data.statusCode}`\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n    const {\n      order\n    } = data;\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/redux/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_MYORDERS_REQUEST","ORDER_MYORDERS_SUCCESS","ORDER_MYORDERS_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","message","getOrderDetails","order_id","get","payOrder","orderId","paymentResult","put","getMyOrdersDetails","orderList","orders","statusCode","deliverOrder"],"mappings":"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","sourcesContent":["import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n\n\n  ORDER_MYORDERS_REQUEST,\n  ORDER_MYORDERS_SUCCESS,\n  ORDER_MYORDERS_FAIL,\n\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  } from \"../types\";\n\n  import axios from \"axios\";\n\n  export const createOrder = (order) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST\n      });\n  \n      const { userLogin:{userInfo} } = getState()\n  \n      const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization:`Bearer ${userInfo.token}`\n          },\n        };\n  \n        const { data } = await axios.post(\n          `/api/orders`,order,\n          config\n        );\n\n     \n    \n          dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n          });\n\n        localStorage.removeItem('cartItems')\n        localStorage.removeItem('shippingAddress')\n  \n         \n    } catch (error) {\n      dispatch({\n          type: ORDER_CREATE_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n    }\n  };\n\n\n  export const getOrderDetails = (order_id) => async (dispatch,getState) => {\n    \n    try {\n\n        dispatch({type: ORDER_DETAILS_REQUEST})\n\n        const {\n          userLogin:{userInfo}\n        } = getState();\n\n        const config = {\n          headers: {\n            Authorization:`Bearer ${userInfo.token}`\n          }\n          }\n\n        const { data } = await axios.get(`/api/orders/${order_id}`,config);\n        const {order} = data;\n      \n\n        \n        dispatch({\n                type: ORDER_DETAILS_SUCCESS,\n                payload: order\n              });\n      \n        \n      } catch (error) {\n          dispatch({\n              type:ORDER_DETAILS_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n          })\n      }\n  };\n\n  export const payOrder = (orderId,paymentResult) => async (dispatch,getState) => {\n    \n    try {\n\n        dispatch({type: ORDER_PAY_REQUEST})\n\n        const {\n          userLogin:{userInfo}\n        } = getState();\n\n        const config = {\n          headers: {\n            'Content-Type': \"application/json\",\n            Authorization:`Bearer ${userInfo.token}`\n          }\n          }\n         \n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config);\n        const {order} = data;\n      \n        dispatch({\n                type: ORDER_PAY_SUCCESS,\n                payload: order\n              });\n      \n        \n      } catch (error) {\n          dispatch({\n              type:ORDER_PAY_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n          })\n      }\n  };\n\n  export const getMyOrdersDetails = () => async (dispatch,getState) => {\n    \n    try {\n\n        dispatch({type: ORDER_MYORDERS_REQUEST})\n\n        const {\n          userLogin:{userInfo}\n        } = getState();\n\n        const config = {\n          headers: {\n            Authorization:`Bearer ${userInfo.token}`\n          }\n          }\n\n        const { data } = await axios.get(`/api/orders/myorders`,config);\n        // const {order} = data;\n    \n        dispatch({\n                type: ORDER_MYORDERS_SUCCESS,\n                payload: data\n              });\n      \n        \n      } catch (error) {\n          dispatch({\n              type:ORDER_MYORDERS_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n          })\n      }\n  };\n\n  export const orderList = () => async (dispatch,getState) => {\n  \n    try {\n      dispatch({type: ORDER_LIST_REQUEST})\n\n      const {\n        userLogin:{userInfo}\n      } = getState();\n\n      const config = {\n        headers: {\n          Authorization:`Bearer ${userInfo.token}`\n        }\n        }\n\n\n    const { data } = await axios.get(\"/api/orders\",config);\n   \n    if(data){\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data.orders,\n          });\n        \n    }else{\n        dispatch({\n            type:ORDER_LIST_FAIL,\n            payload:`Error : ${data.message} statusCode ${data.statusCode}`\n        })\n    }\n  } catch (error) {\n      dispatch({\n          type:ORDER_LIST_FAIL,\n          payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      })\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch,getState) => {\n    \n  try {\n\n      dispatch({type: ORDER_DELIVER_REQUEST})\n\n      const {\n        userLogin:{userInfo}\n      } = getState();\n     \n      const config = {\n        headers: {\n          'Content-Type': \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        }\n        }\n       \n      const { data } = await axios.put(`/api/orders/${orderId}/deliver`,{},config);\n      const {order} = data;\n      dispatch({\n              type: ORDER_DELIVER_SUCCESS,\n              payload: order\n            });\n    \n      \n    } catch (error) {\n        dispatch({\n            type:ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n};"]},"metadata":{},"sourceType":"module"}