{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\nimport { getBrands } from \"../redux/actions/brandActions\";\nimport { getCategories } from \"../redux/actions/categoryActions\";\nimport { getColors } from \"../redux/actions/colorActions\";\nimport { getSizes } from \"../redux/actions/sizeActions\";\nimport { getColorDetails } from \"../redux/actions/colorActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateProductScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState({});\n  const [category, setCategory] = useState({});\n  const [color, setColor] = useState({});\n  const [size, setSize] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch(); //GET ALL DATA FROM REDUX STATE\n\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    error,\n    success,\n    loading\n  } = productCreate;\n  const brandsList = useSelector(state => state.brandsListReducer);\n  const {\n    brands,\n    loading: brandsLoading\n  } = brandsList;\n  const categoriesList = useSelector(state => state.categoryListReducer);\n  const {\n    categories,\n    loading: categoriesLoading\n  } = categoriesList;\n  const colorsList = useSelector(state => state.colorListReducer);\n  const {\n    colors,\n    loading: colorsLoading\n  } = colorsList;\n  const sizesList = useSelector(state => state.sizeListReducer);\n  const {\n    sizes,\n    loading: sizesLoading\n  } = sizesList;\n  useEffect(() => {\n    dispatch(getBrands());\n    dispatch(getColors());\n    dispatch(getCategories());\n    dispatch(getSizes());\n  }, []);\n  console.log(color);\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: 'PRODUCT_CREATE_RESET'\n        });\n        history.push('/admin/products');\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProduct({\n      title,\n      price,\n      quantity,\n      description,\n      brand,\n      category,\n      image\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create new Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: success ? 'success' : 'danger',\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"quantity\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product Quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Brand\",\n          value: brand,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"color\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          onChange: e => {\n            setColor(colors === null || colors === void 0 ? void 0 : colors.find(col => col.colorName === e.target.value));\n            dispatch(getColorDetails());\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 28\n          }, this), colors.map(col => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: color === null || color === void 0 ? void 0 : color.colorName,\n              children: col.colorName\n            }, col._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"sizes\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          value: sizes,\n          onChange: e => setColor(e.target.value),\n          children: ['S', 'M'].map(size => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: size,\n            multiple: true,\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), ['tablets', 'computers', 'cellphones'].map((x, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"description\",\n          label: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"textarea\",\n            value: description,\n            style: {\n              height: '100px'\n            },\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"img\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Product Image URL\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          controlid: \"image-file\",\n          label: \"Choose File\",\n          type: \"file\",\n          custom: \"true\",\n          onChange: () => null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateProductScreen, \"A3NaoGKjtVD9Mgk9ScH6y02Pfr4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CreateProductScreen;\nexport default CreateProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","FloatingLabel","useDispatch","useSelector","Message","Loader","FormContainer","createProduct","getBrands","getCategories","getColors","getSizes","getColorDetails","CreateProductScreen","location","history","title","setTitle","price","setPrice","quantity","setQuantity","image","setImage","description","setDescription","brand","setBrand","category","setCategory","color","setColor","size","setSize","message","setMessage","uploading","setUploading","dispatch","productCreate","state","error","success","loading","brandsList","brandsListReducer","brands","brandsLoading","categoriesList","categoryListReducer","categories","categoriesLoading","colorsList","colorListReducer","colors","colorsLoading","sizesList","sizeListReducer","sizes","sizesLoading","console","log","setTimeout","type","push","submitHandler","e","preventDefault","target","value","find","col","colorName","map","_id","x","index","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col,FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport {createProduct} from \"../redux/actions/productActions\";\n\nimport {getBrands} from \"../redux/actions/brandActions\";\nimport {getCategories} from \"../redux/actions/categoryActions\";\nimport {getColors} from \"../redux/actions/colorActions\";\nimport {getSizes} from \"../redux/actions/sizeActions\";\n\nimport {getColorDetails} from \"../redux/actions/colorActions\";\n\nconst CreateProductScreen = ({ location,history }) => {\n\n\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0)\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState({});\n  const [category,setCategory] = useState ({})\n  const [color,setColor] = useState({});\n  const [size, setSize] = useState({});\n\n  const [message,setMessage] = useState(\"\")\n\n  const [uploading,setUploading] = useState(false)\n\n\n  const dispatch = useDispatch();\n\n   //GET ALL DATA FROM REDUX STATE\n  const productCreate = useSelector(state => state.productCreate);\n  const {error,success,loading} = productCreate;\n\n  const brandsList = useSelector(state => state.brandsListReducer);\n  const {brands,loading:brandsLoading} = brandsList;\n\n  const categoriesList = useSelector(state => state.categoryListReducer);\n  const {categories,loading:categoriesLoading} = categoriesList;\n\n  const colorsList = useSelector(state => state.colorListReducer);\n  const {colors,loading:colorsLoading} = colorsList;\n\n  const sizesList = useSelector(state => state.sizeListReducer);\n  const {sizes,loading:sizesLoading} = sizesList;\n\n\n  useEffect(() => {\n     dispatch(getBrands())\n     dispatch(getColors())\n     dispatch(getCategories())\n     dispatch(getSizes())\n\n  } , [])\n\n\n \n   console.log(color)\n\n    useEffect(() =>{\n      \n        if(success) {\n          setMessage(\"Product Created successfully\")\n          setTimeout(()=>{\n            dispatch({type:'PRODUCT_CREATE_RESET'})\n            history.push('/admin/products')\n          },1500)\n          \n      }\n    },[dispatch,history,success])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProduct({title,price,quantity,description,brand,category,image})) \n   \n};\n\n\n  return (\n    <FormContainer>\n      <h1>Create new Product</h1>\n      {loading && <Loader/>}\n      {message && <Message variant={success ? 'success' : 'danger'} text={message}></Message>}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n  \n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n           required\n            type=\"number\"\n            placeholder=\"Product price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"quantity\" className=\"mt-3\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control\n          required\n            type=\"number\"\n            placeholder=\"Product Quantity\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Brand</Form.Label>\n          <Form.Control\n          required\n            type=\"text\"\n            placeholder=\"Brand\"\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n         \n              \n        <Form.Group controlId=\"color\" className=\"mt-3\">\n        <Form.Label>Select color</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={(e) =>{\n                            setColor(colors?.find(col=>(col.colorName===e.target.value)))\n                            dispatch(getColorDetails())\n                          }\n                          }\n                         \n                        >\n                           <option>select color</option>\n                          {colors.map((col) =>(\n                            <>\n                         \n                            <option key={col._id}  value={color?.colorName}>\n                                 {col.colorName}\n                             </option>\n                             </>)\n                          )}\n\n        \n                        </Form.Control>\n                  \n        </Form.Group>\n         \n      \n\n        <Form.Group controlId=\"sizes\" className=\"mt-3\">\n        <Form.Label>Select sizes</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          value={sizes}\n                          onChange={(e) => setColor(e.target.value)}\n                        >\n                          {['S','M'].map((size) =>(\n                            <option key={size} value={size} multiple={true}>\n                                 {size}\n                             </option>)\n                          )}\n\n        \n                        </Form.Control>\n                  \n        </Form.Group>\n\n\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n                          required\n                          as=\"select\"\n                          value={category}\n                          onChange={(e) => setCategory(e.target.value)}\n                        >  \n                        <option disabled>Select Category</option>\n                          {['tablets','computers','cellphones'].map((x,index) => (\n                            <option key={index} value={x}>\n                              {x}\n                            </option>\n                          ))}\n                        </Form.Control>\n                        \n        </Form.Group>\n\n        <Form.Group controlId=\"description\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <FloatingLabel controlId=\"description\" label=\"description\">\n            <Form.Control\n            required\n            as=\"textarea\"\n            value={description}\n           \n            style={{ height: '100px' }}\n            onChange={(e) => setDescription(e.target.value)}\n            />\n            </FloatingLabel>\n        </Form.Group>\n\n        <Form.Group controlId=\"img\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n            \n            type=\"text\"\n            placeholder=\"Product Image URL\"\n            value={image}\n            onChange={(e) => setImage(e.target.value)}\n          ></Form.Control>\n\n          <Form.Control className=\"mt-3\" controlid='image-file' label='Choose File' type='file' custom='true' onChange={()=>null}></Form.Control>\n          {uploading && <Loader/>}\n        </Form.Group>\n\n     \n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Create\n        </Button>\n\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default CreateProductScreen;"]},"metadata":{},"sourceType":"module"}