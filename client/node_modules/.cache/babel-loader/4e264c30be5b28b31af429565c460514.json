{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\nimport { getBrands } from \"../redux/actions/brandActions\";\nimport { getCategories } from \"../redux/actions/categoryActions\";\nimport { getColors } from \"../redux/actions/colorActions\";\nimport { getSizes } from \"../redux/actions/sizeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateProductScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [color, setColor] = useState([]);\n  const [size, setSize] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch(); //GET ALL DATA FROM REDUX STATE\n\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    error,\n    success,\n    loading\n  } = productCreate;\n  const brandsList = useSelector(state => state.brandsListReducer);\n  const {\n    brands,\n    loading: brandsLoading\n  } = brandsList;\n  const categoriesList = useSelector(state => state.categoryListReducer);\n  const {\n    categories,\n    loading: categoriesLoading\n  } = categoriesList;\n  const colorsList = useSelector(state => state.colorListReducer);\n  const {\n    colors,\n    loading: colorsLoading\n  } = colorsList;\n  const sizesList = useSelector(state => state.sizeListReducer);\n  const {\n    sizes,\n    loading: sizesLoading\n  } = sizesList;\n  useEffect(() => {\n    dispatch(getBrands());\n    dispatch(getColors());\n    dispatch(getCategories());\n    dispatch(getSizes());\n  }, []);\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: \"PRODUCT_CREATE_RESET\"\n        });\n        history.push(\"/admin/products\");\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (title === \"\") {\n      setMessage(\"Please add all the required data\");\n      return;\n    } else {\n      dispatch(createProduct({\n        title,\n        price,\n        quantity,\n        description,\n        colors: color,\n        brand,\n        sizes: size,\n        categories: category,\n        image\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create new Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: success ? \"success\" : \"danger\",\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"quantity\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product Quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => {\n            setBrand(e.target.value);\n          },\n          label: \"select brand..\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), brands.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.brandName,\n              children: item.brandName\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"color\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => {\n            setColor(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), colors.map(col => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: col.colorName,\n              children: col.colorName\n            }, col._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"sizes\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select sizes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => setSize(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), sizes.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s.size,\n            children: s.size\n          }, s.size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => setCategory(prevState => ({ ...prevState,\n            categoryName: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select type of clothes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.categoryName,\n            children: cat.categoryName\n          }, cat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => setCategory(prevState => ({ ...prevState,\n            department: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select department of clothes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.department,\n            children: cat.department\n          }, cat._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"description\",\n          label: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"textarea\",\n            value: description,\n            style: {\n              height: \"100px\"\n            },\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"img\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Product Image URL\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          controlid: \"image-file\",\n          label: \"Choose File\",\n          type: \"file\",\n          custom: \"true\",\n          onChange: () => null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateProductScreen, \"fJWiFOPJi0t+wSkjnpg1Ov1oA2s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CreateProductScreen;\nexport default CreateProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","FloatingLabel","useDispatch","useSelector","Message","Loader","FormContainer","createProduct","getBrands","getCategories","getColors","getSizes","CreateProductScreen","history","title","setTitle","price","setPrice","quantity","setQuantity","image","setImage","description","setDescription","brand","setBrand","category","setCategory","color","setColor","size","setSize","message","setMessage","uploading","setUploading","dispatch","productCreate","state","error","success","loading","brandsList","brandsListReducer","brands","brandsLoading","categoriesList","categoryListReducer","categories","categoriesLoading","colorsList","colorListReducer","colors","colorsLoading","sizesList","sizeListReducer","sizes","sizesLoading","setTimeout","type","push","submitHandler","e","preventDefault","target","value","map","item","brandName","_id","col","colorName","s","prevState","categoryName","cat","department","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\n\nimport { getBrands } from \"../redux/actions/brandActions\";\nimport { getCategories } from \"../redux/actions/categoryActions\";\nimport { getColors } from \"../redux/actions/colorActions\";\nimport { getSizes } from \"../redux/actions/sizeActions\";\n\nconst CreateProductScreen = ({ history }) => {\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [color, setColor] = useState([]);\n  const [size, setSize] = useState([]);\n\n  const [message, setMessage] = useState(\"\");\n\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  //GET ALL DATA FROM REDUX STATE\n  const productCreate = useSelector((state) => state.productCreate);\n  const { error, success, loading } = productCreate;\n\n  const brandsList = useSelector((state) => state.brandsListReducer);\n  const { brands, loading: brandsLoading } = brandsList;\n\n  const categoriesList = useSelector((state) => state.categoryListReducer);\n  const { categories, loading: categoriesLoading } = categoriesList;\n\n  const colorsList = useSelector((state) => state.colorListReducer);\n  const { colors, loading: colorsLoading } = colorsList;\n\n  const sizesList = useSelector((state) => state.sizeListReducer);\n  const { sizes, loading: sizesLoading } = sizesList;\n\n  useEffect(() => {\n    dispatch(getBrands());\n    dispatch(getColors());\n    dispatch(getCategories());\n    dispatch(getSizes());\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({ type: \"PRODUCT_CREATE_RESET\" });\n        history.push(\"/admin/products\");\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if(title===\"\" ){\n      setMessage(\"Please add all the required data\");\n      return;\n    }else{\n      dispatch(\n        createProduct({\n          title,\n          price,\n          quantity,\n          description,\n          colors: color,\n          brand,\n          sizes: size,\n          categories: category,\n          image,\n        })\n      );\n    }\n   \n  };\n\n  return (\n    <FormContainer>\n      <h1>Create new Product</h1>\n      {loading && <Loader />}\n      {message && (\n        <Message\n          variant={success ? \"success\" : \"danger\"}\n          text={message}\n        ></Message>\n      )}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n            required\n            type=\"number\"\n            placeholder=\"Product price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"quantity\" className=\"mt-3\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control\n            required\n            type=\"number\"\n            placeholder=\"Product Quantity\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Select brand</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => {\n              setBrand(e.target.value);\n            }}\n            label=\"select brand..\"\n          >\n            <option>select brand</option>\n            {brands.map((item) => (\n              <>\n                <option key={item._id} value={item.brandName}>\n                  {item.brandName}\n                </option>\n              </>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"color\" className=\"mt-3\">\n          <Form.Label>Select color</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n          >\n            <option>select color</option>\n            {colors.map((col) => (\n              <>\n                <option key={col._id} value={col.colorName}>\n                  {col.colorName}\n                </option>\n              </>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"sizes\" className=\"mt-3\">\n          <Form.Label>Select sizes</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => setSize(e.target.value)}\n          >\n            <option>select sizes</option>\n            {sizes.map((s) => (\n              <option key={s.size} value={s.size}>\n                {s.size}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) =>\n              setCategory((prevState) => ({\n                ...prevState,\n                categoryName: e.target.value,\n              }))\n            }\n          >\n            <option>Select type of clothes</option>\n            {categories.map((cat) => (\n              <option key={cat._id} value={cat.categoryName}>\n                {cat.categoryName}\n              </option>\n            ))}\n          </Form.Control>\n\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) =>\n              setCategory((prevState) => ({\n                ...prevState,\n                department: e.target.value,\n              }))\n            }\n          >\n            <option>Select department of clothes</option>\n            {categories.map((cat) => (\n              <option key={cat._id} value={cat.department}>\n                {cat.department}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"description\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <FloatingLabel controlId=\"description\" label=\"description\">\n            <Form.Control\n              required\n              as=\"textarea\"\n              value={description}\n              style={{ height: \"100px\" }}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </FloatingLabel>\n        </Form.Group>\n\n        <Form.Group controlId=\"img\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Product Image URL\"\n            value={image}\n            onChange={(e) => setImage(e.target.value)}\n          ></Form.Control>\n\n          <Form.Control\n            className=\"mt-3\"\n            controlid=\"image-file\"\n            label=\"Choose File\"\n            type=\"file\"\n            custom=\"true\"\n            onChange={() => null}\n          ></Form.Control>\n          {uploading && <Loader />}\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Create\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default CreateProductScreen;\n"]},"metadata":{},"sourceType":"module"}