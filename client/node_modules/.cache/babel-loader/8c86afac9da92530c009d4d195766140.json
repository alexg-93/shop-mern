{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/UsersListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUsersList, deleteUser, logOut } from \"../redux/actions/userActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UsersListScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const usersList = useSelector(state => state.usersList);\n  const {\n    loading,\n    error,\n    users\n  } = usersList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getUsersList());\n\n      if (error === 'Not authorized as an admin' || error === 'Not authrized , invalid token') {\n        dispatch(logOut());\n      }\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo, error]);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => user._id !== userInfo._id && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !user.isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/admin/user/${user._id}/edit`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  variant: \"light\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-sm\",\n                variant: \"danger\",\n                style: {\n                  marginLeft: \"10px\"\n                },\n                onClick: () => {\n                  deleteUserHandler(user._id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersListScreen, \"Qav4lcbvmXVj1ON7ATfsqEf5EH4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UsersListScreen;\nexport default UsersListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/UsersListScreen.js"],"names":["React","useEffect","Table","Button","useDispatch","useSelector","Message","Loader","getUsersList","deleteUser","logOut","LinkContainer","UsersListScreen","history","dispatch","usersList","state","loading","error","users","userLogin","userInfo","userDelete","success","successDelete","isAdmin","push","deleteUserHandler","id","map","user","_id","name","email","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nimport {\n  getUsersList,\n  deleteUser,\n  logOut\n} from \"../redux/actions/userActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nconst UsersListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const usersList = useSelector((state) => state.usersList);\n\n  const { loading, error, users } = usersList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getUsersList());\n      if(error==='Not authorized as an admin' || error ==='Not authrized , invalid token'){\n        dispatch(logOut())\n   \n      }\n    }\n     else {\n     \n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete,userInfo,error]);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\" text={error} />\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>is Admin</th>\n\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n           \n            {users.map((user) => (\n              user._id !== userInfo._id && (\n                <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                \n                <td>\n                {!user.isAdmin&&(\n                  <>\n                 <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    \n                    <Button className=\"btn-sm\" variant=\"light\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button \n              \n                    className=\"btn-sm\"\n                    variant=\"danger\"\n                    style={{ marginLeft: \"10px\" }}\n                    onClick={() => {\n                     deleteUserHandler(user._id)  \n                    }}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                  </>\n                )}\n                \n                </td>\n              </tr>\n              )\n              \n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UsersListScreen;\n"]},"metadata":{},"sourceType":"module"}