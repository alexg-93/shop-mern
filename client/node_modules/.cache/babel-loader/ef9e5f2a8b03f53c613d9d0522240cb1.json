{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from \"../types\";\nimport axios from \"axios\";\nexport const listProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let sort = arguments.length > 1 ? arguments[1] : undefined;\n  return async (dispatch, getState) => {\n    try {\n      if (sort === '') {\n        dispatch({\n          type: PRODUCT_LIST_REQUEST\n        });\n        const {\n          data\n        } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n        console.log(data);\n        dispatch({\n          type: PRODUCT_LIST_SUCCESS,\n          payload: data.products //products per current page\n\n        });\n      } else if (sort === 'asc') {\n        const {\n          productListReducer\n        } = getState();\n        const products = productListReducer; // const { productListReducer } = getState();\n\n        dispatch({\n          type: 'SORT_ASC',\n          payload: products\n        });\n      } else if (sort === 'desc') {\n        const {\n          productListReducer\n        } = getState();\n        const products = productListReducer; //  const { productListReducer } = getState();\n\n        dispatch({\n          type: 'SORT_DESC',\n          payload: products\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listProductDetails = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n\n    if (data.product) {\n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data.product\n      });\n    } else {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload: `Error : ${data.message} statusCode ${data.statusCode}`\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: \"\"\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products`, product, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const editProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n\n    if (data) {\n      dispatch({\n        type: PRODUCT_UPDATE_SUCCESS\n      });\n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: ``\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const sortProductsAsc = () => (dispatch, getState) => {\n// \tconst { productListReducer } = getState();\n// \tdispatch({ type:'SORT_ASC' , payload:  productListReducer.products});\n// };\n// export const sortProductsDesc = () => (dispatch, getState) => {\n// \tconst {productListReducer } = getState();\n//   dispatch({ type:'SORT_DESC', payload: productListReducer.products });\n// };","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/redux/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","axios","listProducts","keyword","sort","dispatch","getState","type","data","get","pageNumber","console","log","payload","products","productListReducer","error","response","message","listProductDetails","id","product","statusCode","deleteProduct","config","headers","Authorization","delete","createProduct","post","editProduct","put","_id","createProductReview","productId","review"],"mappings":"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","sourcesContent":["import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n\n \n} from \"../types\";\nimport axios from \"axios\";\n\n\n\nexport const listProducts = (keyword='',sort) => async (dispatch,getState) => {\n  \n    try {\n          if(sort===''){\n            dispatch({type: PRODUCT_LIST_REQUEST})\n            const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n            console.log(data)\n            dispatch({\n              type: PRODUCT_LIST_SUCCESS,\n              payload: data.products, //products per current page\n             \n            });\n          }\n          else if(sort==='asc'){\n           const {productListReducer} = getState()\n           const products = productListReducer\n         \n           // const { productListReducer } = getState();\n            dispatch({ type:'SORT_ASC' , payload:  products});\n          }\n          else if(sort==='desc'){\n            const {productListReducer} = getState()\n            const products = productListReducer\n          //  const { productListReducer } = getState();\n            dispatch({ type:'SORT_DESC' , payload:  products});\n          }\n         \n          \n    \n  } catch (error) {\n      dispatch({\n          type:PRODUCT_LIST_FAIL,\n          payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      })\n  }\n};\n\nexport const listProductDetails = (id) => async(dispatch)=>{\n    dispatch({type: PRODUCT_DETAILS_REQUEST})\n    try {\n\n        const { data } = await axios.get(`/api/products/${id}`);\n      \n        if(data.product){\n            dispatch({\n                type: PRODUCT_DETAILS_SUCCESS,\n                payload: data.product,\n              });\n            \n        }else{\n            dispatch({\n                type:PRODUCT_DETAILS_FAIL,\n                payload:`Error : ${data.message} statusCode ${data.statusCode}`\n            })\n        }\n      } catch (error) {\n          dispatch({\n              type:PRODUCT_DETAILS_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n          })\n      }\n}\n\nexport const deleteProduct = (id) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_DELETE_REQUEST\n      });\n  \n\n  \n      const config = {\n          headers: {\n            Authorization:\"\"\n          },\n        };\n    \n        await axios.delete(`/api/products/${id}`,config);\n      \n          dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n          });\n  \n         \n    } catch (error) {\n      dispatch({\n          type: PRODUCT_DELETE_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n    }\n  };\n\n\n  export const createProduct = (product) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REQUEST\n      });\n  \n    \n      const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization:\"\"\n          },\n        };\n  \n        const { data } = await axios.post(\n          `/api/products`,product,\n          config\n        );\n        \n          dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n          });\n   \n    } catch (error) {\n      dispatch({\n          type: PRODUCT_CREATE_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n    }\n  };\n\n\nexport const editProduct = (product) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:\"\"\n        },\n      };\n\n    const {data} = await axios.put(`/api/products/${product._id}`,product,config);\n \n      if(data){\n        dispatch({\n          type: PRODUCT_UPDATE_SUCCESS,\n        });\n        dispatch({\n          type: PRODUCT_DETAILS_SUCCESS,payload:data\n        });\n \n      }\n\n  } catch (error) {\n    dispatch({\n        type: PRODUCT_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\n\nexport const createProductReview = (productId,review) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:``\n        },\n      };\n\n     await axios.post(\n        `/api/products/${productId}/reviews`,review,\n        config\n      );\n      \n        dispatch({\n          type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        });\n \n  } catch (error) {\n    dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\n\n// export const sortProductsAsc = () => (dispatch, getState) => {\n\n// \tconst { productListReducer } = getState();\n// \tdispatch({ type:'SORT_ASC' , payload:  productListReducer.products});\n// };\n\n// export const sortProductsDesc = () => (dispatch, getState) => {\n\n// \tconst {productListReducer } = getState();\n//   dispatch({ type:'SORT_DESC', payload: productListReducer.products });\n// };\n\n  \n"]},"metadata":{},"sourceType":"module"}