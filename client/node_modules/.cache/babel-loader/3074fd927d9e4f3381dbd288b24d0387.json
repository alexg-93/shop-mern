{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, productTopRatedReducer } from \"../redux/reducers/productReducers.js\";\nimport { cartReducer } from \"../redux/reducers/cartReducers.js\";\nimport { filterReducer } from \"./reducers/filterReducers.js\";\nconst reducer = combineReducers({\n  productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productTopRatedReducer,\n  productUpdateReducer,\n  productCreateReviewReducer,\n  cart: cartReducer,\n  filterReducer\n});\nconst cartItemFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst paymentMethodFromLocalStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage,\n    paymentMethod: paymentMethodFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productCreateReviewReducer","productTopRatedReducer","cartReducer","filterReducer","reducer","productDetails","productDelete","productCreate","cart","cartItemFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","paymentMethodFromLocalStorage","initialState","cartItems","shippingAddress","paymentMethod","userLogin","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,EAOEC,sBAPF,QAQO,sCARP;AAUA,SAASC,WAAT,QAA4B,mCAA5B;AAGA,SAASC,aAAT,QAA8B,8BAA9B;AAGA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC9BI,EAAAA,kBAD8B;AAE9BU,EAAAA,cAAc,EAAET,qBAFc;AAG9BU,EAAAA,aAAa,EAAET,oBAHe;AAI9BU,EAAAA,aAAa,EAAET,oBAJe;AAK9BG,EAAAA,sBAL8B;AAM9BF,EAAAA,oBAN8B;AAO9BC,EAAAA,0BAP8B;AAQ9BQ,EAAAA,IAAI,EAAEN,WARwB;AAW9BC,EAAAA;AAX8B,CAAD,CAA/B;AAeA,MAAMM,wBAAwB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD6B,GAE7B,EAFJ;AAIA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ;AAIA,MAAMI,+BAA+B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACpCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADoC,GAEpC,EAFJ;AAIA,MAAMK,6BAA6B,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAClCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CADkC,GAElC,IAFJ;AAIA,MAAMM,YAAY,GAAG;AACnBT,EAAAA,IAAI,EAAE;AACJU,IAAAA,SAAS,EAAET,wBADP;AAEJU,IAAAA,eAAe,EAAEJ,+BAFb;AAGJK,IAAAA,aAAa,EAAEJ;AAHX,GADa;AAMnBK,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAER;AAAZ;AANQ,CAArB;AAQA,MAAMS,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AACA,MAAM+B,KAAK,GAAGlC,WAAW,CACvBc,OADuB,EAEvBa,YAFuB,EAGvBvB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer ,\n  productCreateReviewReducer,\n  productTopRatedReducer,\n} from \"../redux/reducers/productReducers.js\";\n\nimport { cartReducer } from \"../redux/reducers/cartReducers.js\";\n\n\nimport { filterReducer } from \"./reducers/filterReducers.js\";\n\n\nconst reducer = combineReducers({\n  productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productTopRatedReducer,\n  productUpdateReducer ,\n  productCreateReviewReducer,\n  cart: cartReducer,\n \n\n  filterReducer,\n\n});\n\nconst cartItemFromLocalStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst paymentMethodFromLocalStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : null;\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage,\n    paymentMethod: paymentMethodFromLocalStorage,\n  },\n  userLogin: { userInfo: userInfoFromLocalStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}