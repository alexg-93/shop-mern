{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails, editProduct } from \"../redux/actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../redux/types\";\nimport FormContainer from \"../components/FormContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const productID = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const updateProduct = useSelector(state => state.productUpdateReducer);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = updateProduct;\n  useEffect(() => {\n    //check if the logged in user is Admin if not then redirect to homepage.\n    if (!userInfo.isAdmin) {\n      history.push('/');\n    } //checks if update product success\n\n\n    if (successUpdate) {\n      setMessage(\"Product updated successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: PRODUCT_UPDATE_RESET\n        });\n        history.push('/admin/products');\n      }, 1500);\n    } else {\n      if (!product || product._id !== productID) {\n        dispatch(listProductDetails(productID));\n      }\n\n      setName(product.name);\n      setPrice(product.price);\n      setCountInStock(product.countInStock);\n      setImage(product.image);\n      setBrand(product.brand);\n      setDescription(product.description);\n      setCategory(product.category);\n    }\n  }, [dispatch, productID, history, successUpdate, error, errorUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(editProduct({\n      _id: productID,\n      name,\n      price,\n      countInStock,\n      description,\n      brand,\n      category,\n      image\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/products\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        text: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: successUpdate ? 'success' : 'danger',\n        text: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        text: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name || '',\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product price\",\n            value: price || 0,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"quantity\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product Quantity\",\n            value: countInStock || 0,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Brand\",\n            value: brand || \"\",\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            value: category || \"\",\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), ['tablets', 'computers', 'cellphones'].map((x, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: x,\n              children: x\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"description\",\n            label: \"description\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              as: \"textarea\",\n              value: description || \"\",\n              style: {\n                height: '100px'\n              },\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"img\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Product Image\",\n            value: image || \"\",\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"UfeoYD+tuWjdACbG7yy2N5oRPr8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","FloatingLabel","useDispatch","useSelector","Message","Loader","listProductDetails","editProduct","PRODUCT_UPDATE_RESET","FormContainer","ProductEditScreen","match","history","productID","params","id","name","setName","price","setPrice","countInStock","setCountInStock","image","setImage","description","setDescription","brand","setBrand","category","setCategory","message","setMessage","dispatch","productDetails","state","loading","error","product","updateProduct","productUpdateReducer","loadingUpdate","errorUpdate","success","successUpdate","userInfo","isAdmin","push","setTimeout","type","_id","submitHandler","e","preventDefault","target","value","map","x","index","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button,FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {listProductDetails,editProduct} from \"../redux/actions/productActions\";\nimport {PRODUCT_UPDATE_RESET} from \"../redux/types\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst ProductEditScreen = ({ match, history }) => {\n\n  const productID = match.params.id\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0)\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category,setCategory] = useState (\"\")\n  const [message,setMessage] = useState(\"\")\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails);\n\n  const { loading, error , product } = productDetails;\n\n\n  const updateProduct = useSelector((state) => state.productUpdateReducer);\n\n  const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = updateProduct;\n\n  \n    useEffect(() =>{\n\n        //check if the logged in user is Admin if not then redirect to homepage.\n      if(!userInfo.isAdmin){\n        history.push('/')\n      }\n     \n      //checks if update product success\n      if(successUpdate){\n    \n        setMessage(\"Product updated successfully\")\n        setTimeout(()=>{\n          dispatch({type:PRODUCT_UPDATE_RESET})\n          history.push('/admin/products')\n        },1500)\n    \n        \n    }else{\n      if(!product || product._id!==productID){\n        dispatch(listProductDetails(productID))\n      }\n      setName(product.name)\n      setPrice(product.price)\n      setCountInStock(product.countInStock)\n      setImage(product.image)\n      setBrand(product.brand)\n      setDescription(product.description)\n      setCategory(product.category)\n    }\n    \n    },[dispatch,productID,history,successUpdate,error,errorUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(editProduct({_id:productID,name,price,countInStock,description,brand,category,image}))\n    \n};\n\n  return (\n    <>\n    <Link to='/admin/products' className='btn btn-light my-3'>\n      Go Back\n    </Link>\n\n    {}\n  \n    <FormContainer>\n      <h1>Edit Product</h1>\n      {loadingUpdate && <Loader/>}\n      {loading && <Loader/>}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n      {loadingUpdate && <Loader/>}\n      {message && <Message variant={successUpdate ? 'success' : 'danger'} text={message}></Message>}\n      {errorUpdate && <Message variant=\"danger\" text={errorUpdate}></Message>}\n  \n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name || ''}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n           required\n            type=\"number\"\n            placeholder=\"Product price\"\n            value={price || 0}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"quantity\" className=\"mt-3\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control\n          required\n            type=\"number\"\n            placeholder=\"Product Quantity\"\n            value={countInStock || 0}\n            onChange={(e) => setCountInStock(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Brand</Form.Label>\n          <Form.Control\n          required\n            type=\"text\"\n            placeholder=\"Brand\"\n            value={brand || \"\"}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n                          required\n                          as=\"select\"\n                          value={category || \"\"}\n                          onChange={(e) => setCategory(e.target.value)}\n                        >  \n                        <option disabled>Select Category</option>\n                          {['tablets','computers','cellphones'].map((x,index) => (\n                            <option key={index} value={x}>\n                              {x}\n                            </option>\n                          ))}\n                        </Form.Control>\n                        \n        </Form.Group>\n\n        <Form.Group controlId=\"description\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <FloatingLabel controlId=\"description\" label=\"description\">\n            <Form.Control\n            required\n            as=\"textarea\"\n            value={description || \"\"}\n           \n            style={{ height: '100px' }}\n            onChange={(e) => setDescription(e.target.value)}\n            />\n            </FloatingLabel>\n        </Form.Group>\n\n        <Form.Group controlId=\"img\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n          required\n            type=\"text\"\n            placeholder=\"Product Image\"\n            value={image || \"\"}\n            onChange={(e) => setImage(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n     \n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Update\n        </Button>\n\n      </Form>\n    </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}