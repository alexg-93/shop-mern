{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from \"../types\";\nimport axios from \"axios\";\nexport const listProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let sort = arguments.length > 2 ? arguments[2] : undefined;\n  return async (dispatch, getState) => {\n    try {\n      if (sort === '') {\n        dispatch({\n          type: PRODUCT_LIST_REQUEST\n        });\n        const {\n          data\n        } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n        console.log(data);\n        dispatch({\n          type: PRODUCT_LIST_SUCCESS,\n          payload: data.products //products per current page\n\n        });\n      } else if (sort === 'asc') {\n        const {\n          productListReducer\n        } = getState();\n        const products = productListReducer; // const { productListReducer } = getState();\n\n        dispatch({\n          type: 'SORT_ASC',\n          payload: products\n        });\n      } else if (sort === 'desc') {\n        const {\n          productListReducer\n        } = getState();\n        const products = productListReducer; //  const { productListReducer } = getState();\n\n        dispatch({\n          type: 'SORT_DESC',\n          payload: products\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listProductDetails = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n\n    if (data.product) {\n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data.product\n      });\n    } else {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload: `Error : ${data.message} statusCode ${data.statusCode}`\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: \"\"\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products`, product, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const editProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(product._id);\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    console.log('data of updated product', data);\n\n    if (data) {\n      dispatch({\n        type: PRODUCT_UPDATE_SUCCESS\n      });\n      dispatch({\n        type: PRODUCT_DETAILS_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listTopRatedProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_TOP_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n\n    if (data) {\n      dispatch({\n        type: PRODUCT_TOP_SUCCESS,\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: PRODUCT_TOP_FAIL,\n        payload: `Error : ${data.message} statusCode ${data.statusCode}`\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const sortProductsAsc = () => (dispatch, getState) => {\n// \tconst { productListReducer } = getState();\n// \tdispatch({ type:'SORT_ASC' , payload:  productListReducer.products});\n// };\n// export const sortProductsDesc = () => (dispatch, getState) => {\n// \tconst {productListReducer } = getState();\n//   dispatch({ type:'SORT_DESC', payload: productListReducer.products });\n// };","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/redux/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","axios","listProducts","keyword","pageNumber","sort","dispatch","getState","type","data","get","console","log","payload","products","productListReducer","error","response","message","listProductDetails","id","product","statusCode","deleteProduct","config","headers","Authorization","delete","createProduct","userLogin","userInfo","token","post","editProduct","_id","put","createProductReview","productId","review","listTopRatedProducts"],"mappings":"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","sourcesContent":["import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n\n} from \"../types\";\nimport axios from \"axios\";\n\n\n\nexport const listProducts = (keyword='' , pageNumber='',sort) => async (dispatch,getState) => {\n  \n    try {\n          if(sort===''){\n            dispatch({type: PRODUCT_LIST_REQUEST})\n            const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n            console.log(data)\n            dispatch({\n              type: PRODUCT_LIST_SUCCESS,\n              payload: data.products, //products per current page\n             \n            });\n          }\n          else if(sort==='asc'){\n           const {productListReducer} = getState()\n           const products = productListReducer\n         \n           // const { productListReducer } = getState();\n            dispatch({ type:'SORT_ASC' , payload:  products});\n          }\n          else if(sort==='desc'){\n            const {productListReducer} = getState()\n            const products = productListReducer\n          //  const { productListReducer } = getState();\n            dispatch({ type:'SORT_DESC' , payload:  products});\n          }\n         \n          \n    \n  } catch (error) {\n      dispatch({\n          type:PRODUCT_LIST_FAIL,\n          payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      })\n  }\n};\n\nexport const listProductDetails = (id) => async(dispatch)=>{\n    dispatch({type: PRODUCT_DETAILS_REQUEST})\n    try {\n\n        const { data } = await axios.get(`/api/products/${id}`);\n      \n        if(data.product){\n            dispatch({\n                type: PRODUCT_DETAILS_SUCCESS,\n                payload: data.product,\n              });\n            \n        }else{\n            dispatch({\n                type:PRODUCT_DETAILS_FAIL,\n                payload:`Error : ${data.message} statusCode ${data.statusCode}`\n            })\n        }\n      } catch (error) {\n          dispatch({\n              type:PRODUCT_DETAILS_FAIL,\n              payload: error.response && error.response.data.message ? error.response.data.message : error.message\n          })\n      }\n}\n\nexport const deleteProduct = (id) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_DELETE_REQUEST\n      });\n  \n\n  \n      const config = {\n          headers: {\n            Authorization:\"\"\n          },\n        };\n    \n        await axios.delete(`/api/products/${id}`,config);\n      \n          dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n          });\n  \n         \n    } catch (error) {\n      dispatch({\n          type: PRODUCT_DELETE_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n    }\n  };\n\n\n  export const createProduct = (product) => async (dispatch,getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REQUEST\n      });\n  \n      const { userLogin:{userInfo} } = getState()\n  \n      const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization:`Bearer ${userInfo.token}`\n          },\n        };\n  \n        const { data } = await axios.post(\n          `/api/products`,product,\n          config\n        );\n        \n          dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n          });\n   \n    } catch (error) {\n      dispatch({\n          type: PRODUCT_CREATE_FAIL,\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n    }\n  };\n\n\nexport const editProduct = (product) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n    console.log(product._id)\n    const {data} = await axios.put(`/api/products/${product._id}`,product,config);\n     console.log('data of updated product',data)\n      if(data){\n        dispatch({\n          type: PRODUCT_UPDATE_SUCCESS,\n        });\n        dispatch({\n          type: PRODUCT_DETAILS_SUCCESS,payload:data\n        });\n \n      }\n\n  } catch (error) {\n    dispatch({\n        type: PRODUCT_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\n\n\nexport const createProductReview = (productId,review) => async (dispatch,getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n\n    const { userLogin:{userInfo} } = getState()\n\n    const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:`Bearer ${userInfo.token}`\n        },\n      };\n\n     await axios.post(\n        `/api/products/${productId}/reviews`,review,\n        config\n      );\n      \n        dispatch({\n          type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        });\n \n  } catch (error) {\n    dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n  }\n};\n\nexport const listTopRatedProducts = () => async (dispatch) => {\n  dispatch({type: PRODUCT_TOP_REQUEST})\n  try {\n  const { data } = await axios.get(`/api/products/top`);\n\n  if(data){\n      dispatch({\n          type: PRODUCT_TOP_SUCCESS,\n          payload: data,\n        });\n      \n  }else{\n      dispatch({\n          type:PRODUCT_TOP_FAIL,\n          payload:`Error : ${data.message} statusCode ${data.statusCode}`\n      })\n  }\n} catch (error) {\n    dispatch({\n        type:PRODUCT_TOP_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n}\n};\n\n\n// export const sortProductsAsc = () => (dispatch, getState) => {\n\n// \tconst { productListReducer } = getState();\n// \tdispatch({ type:'SORT_ASC' , payload:  productListReducer.products});\n// };\n\n// export const sortProductsDesc = () => (dispatch, getState) => {\n\n// \tconst {productListReducer } = getState();\n//   dispatch({ type:'SORT_DESC', payload: productListReducer.products });\n// };\n\n  \n"]},"metadata":{},"sourceType":"module"}