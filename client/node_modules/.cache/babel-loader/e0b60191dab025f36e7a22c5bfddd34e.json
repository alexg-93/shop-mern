{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, FloatingLabel, Feedback } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\nimport { getBrands } from \"../redux/actions/brandActions\";\nimport { getCategories } from \"../redux/actions/categoryActions\";\nimport { getColors } from \"../redux/actions/colorActions\";\nimport { getSizes } from \"../redux/actions/sizeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateProductScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [color, setColor] = useState([]);\n  const [size, setSize] = useState([]);\n  const [message, setMessage] = useState(\"\"); //state for validation of the form  \n\n  const [validated, setValidated] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch(); //GET ALL DATA FROM REDUX STATE\n\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    error,\n    success,\n    loading\n  } = productCreate;\n  const brandsList = useSelector(state => state.brandsListReducer);\n  const {\n    brands,\n    loading: brandsLoading\n  } = brandsList;\n  const categoriesList = useSelector(state => state.categoryListReducer);\n  const {\n    categories,\n    loading: categoriesLoading\n  } = categoriesList;\n  const colorsList = useSelector(state => state.colorListReducer);\n  const {\n    colors,\n    loading: colorsLoading\n  } = colorsList;\n  const sizesList = useSelector(state => state.sizeListReducer);\n  const {\n    sizes,\n    loading: sizesLoading\n  } = sizesList;\n  useEffect(() => {\n    dispatch(getBrands());\n    dispatch(getColors());\n    dispatch(getCategories());\n    dispatch(getSizes());\n  }, []);\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: \"PRODUCT_CREATE_RESET\"\n        });\n        history.push(\"/admin/products\");\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (title === \"\" || price === 0 || quantity === 0 || image === \"\" || description === \"\" || brand === \"\" || !category || color.length === 0 || size.length === 0) {\n      setMessage(\"Please fill all the fields\");\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 3000);\n    } else {\n      dispatch(createProduct({\n        title,\n        price,\n        quantity,\n        description,\n        colors: color,\n        brand,\n        sizes: size,\n        categories: category,\n        image\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: success ? \"success\" : \"danger\",\n        text: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        text: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        validated: false,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"title\",\n            placeholder: \"Enter title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustom01\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"First name\",\n            defaultValue: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"quantity\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Product Quantity\",\n            value: quantity,\n            onChange: e => setQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => {\n              setBrand(e.target.value);\n            },\n            label: \"select brand..\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), brands.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.brandName,\n                children: item.brandName\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid zip.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"color\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => {\n              setColor(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), colors.map(col => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: col.colorName,\n                children: col.colorName\n              }, col._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sizes\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setSize(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select sizes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this), sizes.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s.size,\n              children: s.size\n            }, s.size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setCategory(prevState => ({ ...prevState,\n              categoryName: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select type of clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.categoryName,\n              children: cat.categoryName\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"select\",\n            onChange: e => setCategory(prevState => ({ ...prevState,\n              department: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select department of clothes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.department,\n              children: cat.department\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"description\",\n            label: \"description\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              as: \"textarea\",\n              value: description,\n              style: {\n                height: \"100px\"\n              },\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"img\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Product Image URL\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            controlid: \"image-file\",\n            label: \"Choose File\",\n            type: \"file\",\n            custom: \"true\",\n            onChange: () => null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 11\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateProductScreen, \"ppRUrs6q2mhPaGLPg/e1WpgCCGA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CreateProductScreen;\nexport default CreateProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js"],"names":["React","useState","useEffect","Form","Button","FloatingLabel","Feedback","useDispatch","useSelector","Message","Loader","FormContainer","createProduct","getBrands","getCategories","getColors","getSizes","CreateProductScreen","history","title","setTitle","price","setPrice","quantity","setQuantity","image","setImage","description","setDescription","brand","setBrand","category","setCategory","color","setColor","size","setSize","message","setMessage","validated","setValidated","uploading","setUploading","dispatch","productCreate","state","error","success","loading","brandsList","brandsListReducer","brands","brandsLoading","categoriesList","categoryListReducer","categories","categoriesLoading","colorsList","colorListReducer","colors","colorsLoading","sizesList","sizeListReducer","sizes","sizesLoading","setTimeout","type","push","submitHandler","e","preventDefault","length","target","value","Col","map","item","brandName","_id","col","colorName","s","prevState","categoryName","cat","department","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button,FloatingLabel,Feedback} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\n\nimport { getBrands } from \"../redux/actions/brandActions\";\nimport { getCategories } from \"../redux/actions/categoryActions\";\nimport { getColors } from \"../redux/actions/colorActions\";\nimport { getSizes } from \"../redux/actions/sizeActions\";\n\nconst CreateProductScreen = ({ history }) => {\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({});\n  const [color, setColor] = useState([]);\n  const [size, setSize] = useState([]);\n\n  const [message, setMessage] = useState(\"\");\n  \n  //state for validation of the form  \n  const [validated, setValidated] = useState(false);\n\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  //GET ALL DATA FROM REDUX STATE\n  const productCreate = useSelector((state) => state.productCreate);\n  const { error, success, loading } = productCreate;\n\n  const brandsList = useSelector((state) => state.brandsListReducer);\n  const { brands, loading: brandsLoading } = brandsList;\n\n  const categoriesList = useSelector((state) => state.categoryListReducer);\n  const { categories, loading: categoriesLoading } = categoriesList;\n\n  const colorsList = useSelector((state) => state.colorListReducer);\n  const { colors, loading: colorsLoading } = colorsList;\n\n  const sizesList = useSelector((state) => state.sizeListReducer);\n  const { sizes, loading: sizesLoading } = sizesList;\n\n  useEffect(() => {\n    dispatch(getBrands());\n    dispatch(getColors());\n    dispatch(getCategories());\n    dispatch(getSizes());\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({ type: \"PRODUCT_CREATE_RESET\" });\n        history.push(\"/admin/products\");\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if(title===\"\" || price===0 || quantity===0 || image===\"\" || description===\"\" || brand===\"\" || !category || color.length===0 || size.length===0){\n      setMessage(\"Please fill all the fields\");\n      setTimeout(() => {\n        setMessage(\"\")\n      }, 3000);\n    }else{\n      dispatch(\n        createProduct({\n          title,\n          price,\n          quantity,\n          description,\n          colors: color,\n          brand,\n          sizes: size,\n          categories: category,\n          image,\n        })\n      );\n    }\n   \n  };\n\n  return (\n    <>\n    <FormContainer>\n      <h1>Create new Product</h1>\n      {loading && <Loader />}\n      {message && (\n        <Message\n          variant={success ? \"success\" : \"danger\"}\n          text={message}\n        ></Message>\n      )}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n\n      <Form onSubmit={submitHandler} validated={false} noValidate>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            required\n            type=\"title\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></Form.Control>\n             <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n\n      \n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n            defaultValue=\"Mark\"\n          />\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n            required\n            type=\"number\"\n            placeholder=\"Product price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"quantity\" className=\"mt-3\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control\n            required\n            type=\"number\"\n            placeholder=\"Product Quantity\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Select brand</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => {\n              setBrand(e.target.value);\n            }}\n            label=\"select brand..\"\n          >\n            <option>select brand</option>\n            {brands.map((item) => (\n              <>\n                <option key={item._id} value={item.brandName}>\n                  {item.brandName}\n                </option>\n              </>\n            ))}\n            \n          </Form.Control>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"color\" className=\"mt-3\">\n          <Form.Label>Select color</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n          >\n            <option>select color</option>\n            {colors.map((col) => (\n              <>\n                <option key={col._id} value={col.colorName}>\n                  {col.colorName}\n                </option>\n              </>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"sizes\" className=\"mt-3\">\n          <Form.Label>Select sizes</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) => setSize(e.target.value)}\n          >\n            <option>select sizes</option>\n            {sizes.map((s) => (\n              <option key={s.size} value={s.size}>\n                {s.size}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) =>\n              setCategory((prevState) => ({\n                ...prevState,\n                categoryName: e.target.value,\n              }))\n            }\n          >\n            <option>Select type of clothes</option>\n            {categories.map((cat) => (\n              <option key={cat._id} value={cat.categoryName}>\n                {cat.categoryName}\n              </option>\n            ))}\n          </Form.Control>\n\n          <Form.Control\n            required\n            as=\"select\"\n            onChange={(e) =>\n              setCategory((prevState) => ({\n                ...prevState,\n                department: e.target.value,\n              }))\n            }\n          >\n            <option>Select department of clothes</option>\n            {categories.map((cat) => (\n              <option key={cat._id} value={cat.department}>\n                {cat.department}\n              </option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"description\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <FloatingLabel controlId=\"description\" label=\"description\">\n            <Form.Control\n              required\n              as=\"textarea\"\n              value={description}\n              style={{ height: \"100px\" }}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </FloatingLabel>\n        </Form.Group>\n\n        <Form.Group controlId=\"img\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Product Image URL\"\n            value={image}\n            onChange={(e) => setImage(e.target.value)}\n          ></Form.Control>\n\n          <Form.Control\n            className=\"mt-3\"\n            controlid=\"image-file\"\n            label=\"Choose File\"\n            type=\"file\"\n            custom=\"true\"\n            onChange={() => null}\n          ></Form.Control>\n          {uploading && <Loader />}\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Create\n        </Button>\n      </Form>\n    </FormContainer>\n\n  \n    </>\n  );\n};\n\nexport default CreateProductScreen;\n"]},"metadata":{},"sourceType":"module"}