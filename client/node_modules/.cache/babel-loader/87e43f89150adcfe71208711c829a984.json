{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateProductScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    error,\n    success,\n    loading\n  } = productCreate;\n  useEffect(() => {\n    if (success) {\n      setMessage(\"Product Created successfully\");\n      setTimeout(() => {\n        dispatch({\n          type: 'PRODUCT_CREATE_RESET'\n        });\n        history.push('/admin/products');\n      }, 1500);\n    }\n  }, [dispatch, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProduct({\n      title,\n      price,\n      quantity,\n      description,\n      brand,\n      category,\n      image\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const files = e.target.files[0];\n    console.log(files);\n    const formData = new FormData();\n    formData.append('image', files);\n    console.log(formData);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (err) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create new Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: success ? 'success' : 'danger',\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Product title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"quantity\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Product Quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Brand\",\n          value: brand,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"select\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), ['tablets', 'computers', 'cellphones'].map((x, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"description\",\n          label: \"description\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            as: \"textarea\",\n            value: description,\n            style: {\n              height: '100px'\n            },\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"img\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Product Image URL\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          controlid: \"image-file\",\n          label: \"Choose File\",\n          type: \"file\",\n          custom: \"true\",\n          onChange: uploadFileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"mt-3\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateProductScreen, \"hUZYVAh1sXPyG2avrXcm55t2d9o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateProductScreen;\nexport default CreateProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProductScreen\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/CreateProductScreen.js"],"names":["React","useState","useEffect","axios","Form","Button","Row","Col","FloatingLabel","useDispatch","useSelector","Message","Loader","FormContainer","createProduct","CreateProductScreen","location","history","title","setTitle","price","setPrice","quantity","setQuantity","image","setImage","description","setDescription","brand","setBrand","category","setCategory","message","setMessage","uploading","setUploading","dispatch","productCreate","state","error","success","loading","setTimeout","type","push","submitHandler","e","preventDefault","uploadFileHandler","files","target","console","log","formData","FormData","append","config","headers","data","post","err","value","map","x","index","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport { Form, Button, Row, Col,FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport {createProduct} from \"../redux/actions/productActions\";\n\n\nconst CreateProductScreen = ({ location, history }) => {\n\n  const [title, setTitle] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(0)\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category,setCategory] = useState (\"\")\n\n  const [message,setMessage] = useState(\"\")\n\n  const [uploading,setUploading] = useState(false)\n\n\n\n  const dispatch = useDispatch();\n\n\n  const productCreate = useSelector(state => state.productCreate);\n\n  const {error,success,loading} = productCreate;\n\n  \n    useEffect(() =>{\n    \n        if(success) {\n          setMessage(\"Product Created successfully\")\n          setTimeout(()=>{\n            dispatch({type:'PRODUCT_CREATE_RESET'})\n            history.push('/admin/products')\n          },1500)\n          \n      }\n    },[dispatch,history,success])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProduct({title,price,quantity,description,brand,category,image})) \n   \n};\n\nconst uploadFileHandler = async (e) => {\n  const files = e.target.files[0]\n  console.log(files)\n  const formData = new FormData()\n  formData.append('image',files)\n  console.log(formData)\n  setUploading(true)\n\n  try {\n    const config = {\n      headers:{\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n\n    const {data} = await axios.post('/api/upload',formData,config)\n    setImage(data)\n    setUploading(false)\n  } catch (err) {\n    setUploading(false)\n  }\n}\n\n  return (\n    <FormContainer>\n      <h1>Create new Product</h1>\n      {loading && <Loader/>}\n      {message && <Message variant={success ? 'success' : 'danger'} text={message}></Message>}\n      {error && <Message variant=\"danger\" text={error}></Message>}\n  \n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Product title</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n           required\n            type=\"number\"\n            placeholder=\"Product price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"quantity\" className=\"mt-3\">\n          <Form.Label>Quantity</Form.Label>\n          <Form.Control\n          required\n            type=\"number\"\n            placeholder=\"Product Quantity\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Brand</Form.Label>\n          <Form.Control\n          required\n            type=\"text\"\n            placeholder=\"Brand\"\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n                          required\n                          as=\"select\"\n                          value={category}\n                          onChange={(e) => setCategory(e.target.value)}\n                        >  \n                        <option disabled>Select Category</option>\n                          {['tablets','computers','cellphones'].map((x,index) => (\n                            <option key={index} value={x}>\n                              {x}\n                            </option>\n                          ))}\n                        </Form.Control>\n                        \n        </Form.Group>\n\n        <Form.Group controlId=\"description\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <FloatingLabel controlId=\"description\" label=\"description\">\n            <Form.Control\n            required\n            as=\"textarea\"\n            value={description}\n           \n            style={{ height: '100px' }}\n            onChange={(e) => setDescription(e.target.value)}\n            />\n            </FloatingLabel>\n        </Form.Group>\n\n        <Form.Group controlId=\"img\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n            \n            type=\"text\"\n            placeholder=\"Product Image URL\"\n            value={image}\n            onChange={(e) => setImage(e.target.value)}\n          ></Form.Control>\n\n          <Form.Control className=\"mt-3\" controlid='image-file' label='Choose File' type='file' custom='true' onChange={uploadFileHandler}></Form.Control>\n          {uploading && <Loader/>}\n        </Form.Group>\n\n     \n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n          Create\n        </Button>\n\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default CreateProductScreen;"]},"metadata":{},"sourceType":"module"}