{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/web/react/store/client/src/screens/CreateSpecScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createColor } from '../redux/actions/colorActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateSpecs = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const colorCreate = useSelector(state => state.colorCreateReducer);\n  const {\n    error: errorColor,\n    success: successColor,\n    loading: loadingColor\n  } = colorCreate;\n  const [color, setColor] = useState({\n    colorName: \"\",\n    colorHex: \"\"\n  });\n  const [size, setSize] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({\n    department: \"\",\n    categoryName: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n\n  const colorHandler = e => {\n    e.preventDefault();\n    dispatch(createColor(color));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create new specifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loadingColor && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: successColor ? \"success\" : \"danger\",\n      text: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), errorColor && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      text: errorColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"color\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Color name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter color name\",\n          value: color.colorName,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Color Hex value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"color\",\n          placeholder: \"Enter color hex\",\n          value: color.colorHex,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          onClick: colorHandler,\n          children: \"Create color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"brand\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Brand\",\n          value: brand,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          onClick: brandHandler,\n          children: \"Create Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"size\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"size e.g S/M/L..\",\n          value: size,\n          onChange: e => setSize(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"mt-3\",\n          onClick: colorHandler,\n          children: \"Create color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"department e.g Mens/Womens\",\n          value: category.department,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"category name e.g Jackets\",\n          value: category.categoryName,\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSpecs, \"gwaDad/DJkaV3FzW9YwWDqcjXwI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateSpecs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSpecs\");","map":{"version":3,"sources":["/Users/alex/Documents/web/react/store/client/src/screens/CreateSpecScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","FloatingLabel","useDispatch","useSelector","Message","Loader","FormContainer","createColor","CreateSpecs","dispatch","colorCreate","state","colorCreateReducer","error","errorColor","success","successColor","loading","loadingColor","color","setColor","colorName","colorHex","size","setSize","brand","setBrand","category","setCategory","department","categoryName","message","setMessage","colorHandler","e","preventDefault","target","value","brandHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\nimport {createColor} from '../redux/actions/colorActions'\n\n\nexport const CreateSpecs = () => {\n  const dispatch = useDispatch();\n\n  const colorCreate = useSelector((state) => state.colorCreateReducer);\n\n  const {\n    error: errorColor,\n    success: successColor,\n    loading: loadingColor,\n  } = colorCreate;\n\n  const [color, setColor] = useState({\n    colorName: \"\",\n    colorHex: \"\",\n  });\n  const [size, setSize] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState({\n    department: \"\",\n    categoryName: \"\",\n  });\n\n  const [message, setMessage] = useState(\"\");\n\n\n  const colorHandler = (e) => {\n    e.preventDefault();\n    dispatch(createColor(color)) \n   \n};\n\n\n  return (\n    <FormContainer>\n      <h1>Create new specifications</h1>\n      {loadingColor && <Loader />}\n      {message && (\n        <Message\n          variant={successColor ? \"success\" : \"danger\"}\n          text={message}\n        ></Message>\n      )}\n      {errorColor && <Message variant=\"danger\" text={errorColor}></Message>}\n\n      <Form>\n        <Form.Group controlId=\"color\" className=\"mt-3\">\n          <Form.Label>Color name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter color name\"\n            value={color.colorName}\n            onChange={(e) => setColor(e.target.value)}\n          ></Form.Control>\n\n          <Form.Label>Color Hex value</Form.Label>\n          <Form.Control\n            required\n            type=\"color\"\n            placeholder=\"Enter color hex\"\n            value={color.colorHex}\n            onChange={(e) => setColor(e.target.value)}\n          ></Form.Control>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\" onClick={colorHandler}>\n          Create color\n        </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Brand</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Brand\"\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\" onClick={brandHandler}>\n          Create Brand\n        </Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"size\" className=\"mt-3\">\n          <Form.Label>Size</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"size e.g S/M/L..\"\n            value={size}\n            onChange={(e) => setSize(e.target.value)}\n          ></Form.Control>\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\" onClick={colorHandler}>\n          Create color\n        </Button>\n        </Form.Group>\n\n      \n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"department e.g Mens/Womens\"\n            value={category.department}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"category name e.g Jackets\"\n            value={category.categoryName}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        \n       \n\n       \n      </Form>\n    </FormContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}